@@ title = "Change EVs (with exit code bootstrap)"
@@ author = "E-Sh4rk"
@@ exit = "Bootstrapped"

; THIS CODE NEED A CERTIFICATE EXIT CODE BOOTSTRAP POKEMON IN BOX 14
; This code changes the EVs of the pokemon in Box 10 Slot 19.
; Stat changes due to the EV change will be applied immediately, as opposed to requiring a level up.
; The value of OTID is TID + (SID * 65536)
; the current stat parameters below represent the current EVs the pokemon has in the corresponding stat, NOT the value of the stat itself.

inaccurate_emu = 0 ; Set to 1 if you are using an emulator < mgba 0.9
pid = 0
otid = 0
new_hp = 0
new_atk = 0
new_def = 0
new_speed = 0
new_spe_atk = 0
new_spe_def = 0
; You must set either the variables cur_encoded_evsX (use the code "Read EVs field" to determine their values)...
cur_encoded_evs1 = 0
cur_encoded_evs2 = 0
cur_encoded_evs3 = 0
; ... OR the variables cur_hp,cur_atk,cur_def,cur_speed,cur_spe_atk,cur_spe_def
cur_hp = 0
cur_atk = 0
cur_def = 0
cur_speed = 0
cur_spe_atk = 0
cur_spe_def = 0

; DO NOT MODIFY THE PARAMETERS BELOW
key = pid ^ otid

cur_evs1_computed = cur_hp | (cur_atk << 8)
cur_evs2_computed = cur_def| (cur_speed << 8)
cur_evs3_computed = cur_spe_atk | (cur_spe_def << 8)

cur_evs1 = cur_encoded_evs1 == 0 ? cur_evs1_computed : cur_encoded_evs1 ^ (key & 0xFFFF)
cur_evs2 = cur_encoded_evs2 == 0 ? cur_evs2_computed : cur_encoded_evs2 ^ (key >> 16)
cur_evs3 = cur_encoded_evs3 == 0 ? cur_evs3_computed : cur_encoded_evs3 ^ (key & 0xFFFF)

new_evs1 = new_hp | (new_atk << 8)
new_evs2 = new_def| (new_speed << 8)
new_evs3 = new_spe_atk | (new_spe_def << 8)
new_encoded_evs1 = new_evs1 ^ (key & 0xFFFF)
new_encoded_evs2 = new_evs2 ^ (key >> 16)
new_encoded_evs3 = new_evs3 ^ (key & 0xFFFF)

pmod = pid % 24
ev_substructure_position = \
    pmod == 12 | pmod == 13 | pmod == 14 | pmod == 15 | \
    pmod == 16 | pmod == 17 ? 0 : \
    pmod == 2  | pmod == 3  | pmod == 8  | pmod == 9  | \
    pmod == 22 | pmod == 23 ? 1 : \
    pmod == 0  | pmod == 5  | pmod == 6  | pmod == 11 | \
    pmod == 19 | pmod == 21 ? 2 : 3
base_offset = inaccurate_emu ? -7 : -9
offset = base_offset + 32 + 12*ev_substructure_position
checksum_diff = (new_evs1 + new_evs2 + new_evs3) - (cur_evs1 + cur_evs2 + cur_evs3)

@@

sbc r11, r15, #0x2940          ; r11 = &Box10Slot19 + 9

LDRH r12, [r11, {base_offset + 28}]       ; Load checksum
ADC r12, r12, {checksum_diff & 0xFFFF} ?
STRH r12, [r11, {base_offset + 28}]       ; Write checksum

movs r12, {new_encoded_evs1 + (new_encoded_evs2 << 16)} ?
adc r11, r11, {offset} ?
str r12, [r11, 0]!

movs r12, {new_encoded_evs3} ?
strh r12, [r11, 4]
